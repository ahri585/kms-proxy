version: "3.9"

services:
  web:
    image: nginx:1.28
    container_name: kms-proxy-web-1
    depends_on:
      - api
    ports:
      - "80:80"
      - "443:443"                              # ✅ HTTPS 포트 추가
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro    # Nginx 설정
      - /etc/letsencrypt:/etc/letsencrypt:ro   # ✅ 인증서 공유 추가
    restart: unless-stopped
    networks:
      - kmsnet

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: kms-proxy-api-1
    env_file: .env
    volumes:
      - ./api:/app
    environment:
      GUNICORN_CMD_ARGS: >
        --bind 0.0.0.0:8000
        --workers 2
        --worker-class gthread
        --threads 4
    command: sh -lc 'gunicorn app:app $GUNICORN_CMD_ARGS'
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - kmsnet

  db:
    image: postgres:16
    container_name: kms-proxy-db-1
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 12
    restart: unless-stopped
    networks:
      - kmsnet

networks:
  kmsnet:

volumes:
  dbdata:

