# ─────────────────────────────────────────────
# 업스트림 (Flask 백엔드)
# ─────────────────────────────────────────────
upstream backend {
    server api:8000;
    keepalive 32;
}

# ─────────────────────────────────────────────
# HTTP → HTTPS 리다이렉트
# ─────────────────────────────────────────────
server {
    listen 80;
    server_name lockument.duckdns.org;
    return 301 https://$host$request_uri;
}

# ─────────────────────────────────────────────
# HTTPS 메인 서버 블록
# ─────────────────────────────────────────────
server {
    listen 443 ssl;
    server_name lockument.duckdns.org;

    # ────────────── SSL 인증서 설정 ──────────────
    ssl_certificate /etc/letsencrypt/live/lockument.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/lockument.duckdns.org/privkey.pem;

    # ────────────── SSL 보안 설정 ──────────────
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    client_max_body_size 100m;
    server_tokens off;

    # ─────────────────────────────────────────────
    # ✅ 프론트엔드 (Vite 빌드 결과)
    # ─────────────────────────────────────────────
    root /usr/share/nginx/html;
    index index.html;

    # ✅ React/Vite SPA 라우팅 (최우선)
    location / {
        try_files $uri /index.html;
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }

    # ─────────────────────────────────────────────
    # /static/masked/* → /upload/masked/* 리다이렉트
    # ─────────────────────────────────────────────
    location ~ ^/static/masked/(.+)$ {
        return 302 /upload/masked/$1;
    }

    # ─────────────────────────────────────────────
    # /upload/masked/* → Flask static/masked 로 프록시 전달
    # ─────────────────────────────────────────────
    location ^~ /upload/masked/ {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        proxy_pass http://backend/static/masked/;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ─────────────────────────────────────────────
    # /assets → 정적 자산 캐싱 (Vite 빌드 산출물)
    # ─────────────────────────────────────────────
    location /assets/ {
        access_log off;
        expires 7d;
        add_header Cache-Control "public";
        types {
            application/javascript js;
            text/css css;
        }
    }

    # ─────────────────────────────────────────────
    # /upload 접두사 정규화
    # ─────────────────────────────────────────────
    location = /upload {
        return 301 /upload/;
    }

    # ─────────────────────────────────────────────
    # 업로드 및 다운로드 라우트 (Flask의 /upload/*)
    # ─────────────────────────────────────────────
    location ^~ /upload/ {
        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 86400;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_request_buffering off;
        proxy_buffering off;
        add_header X-Accel-Buffering no always;
    }

    # ─────────────────────────────────────────────
    # Flask API (/api/*)
    # ─────────────────────────────────────────────
    location ^~ /api/ {
        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 86400;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
    }

    # ─────────────────────────────────────────────
    # 업스트림 에러 핸들링
    # ─────────────────────────────────────────────
    error_page 502 503 504 /_upstream_error.json;
    location = /_upstream_error.json {
        default_type application/json;
        return 200 '{"ok":false,"error":"upstream_timeout"}';
    }
}

